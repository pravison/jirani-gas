# Generated by Django 5.1.4 on 2025-04-22 09:35

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('businesses', '0001_initial'),
        ('customers', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BorrowPoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points_borrowed', models.IntegerField(default=0)),
                ('points_currently_repaid', models.IntegerField(default=0)),
                ('fully_paid', models.BooleanField(default=True)),
                ('borrower', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='borrower', to='customers.customer')),
                ('lender', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lender', to='customers.customer')),
            ],
        ),
        migrations.CreateModel(
            name='LoyaltyPointsCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('points on purchases made', 'points on purchases made'), ('signup points', 'signup points'), ('points on visiting the store', 'points on visiting the store'), ('points from refferal sales', 'points from refferal sales'), ('points on bringing friends to the store', 'points on bringing friends to the store')], max_length=100)),
                ('total_value_for_a_point', models.FloatField(default=10, help_text='what value equals 1 point ex. ksh10 for 1 point')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LoyaltyPoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('purchase_value', models.IntegerField(default=0)),
                ('points_earned', models.IntegerField(default=0)),
                ('points_redeemed', models.IntegerField(default=0)),
                ('added_by', models.CharField(max_length=200)),
                ('payement_refference_code', models.CharField(blank=True, max_length=200, null=True)),
                ('points_were', models.CharField(choices=[('earned', 'earned'), ('redeemed', 'redeemed'), ('loaned', 'loaned'), ('borrowed', 'borrowed'), ('used to repay borrowed points', 'used to repay borrowed points')], default='earned', help_text=' purpose for the points', max_length=100)),
                ('status', models.CharField(choices=[('awaiting approval', 'awaiting approval'), ('approved', 'approved'), ('declined', 'declined')], default='awaiting approval', max_length=100)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('business', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='businesses.business')),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='customers.customer')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='points.loyaltypointscategory')),
            ],
        ),
        migrations.CreateModel(
            name='PayBorrowedPoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points_payed', models.IntegerField(default=0)),
                ('borrowed_point', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='points.borrowpoint')),
            ],
        ),
    ]
